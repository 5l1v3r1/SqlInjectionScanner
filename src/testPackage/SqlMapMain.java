/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testPackage;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
/**
 *
 * @author 赵学鹏
 */
public class SqlMapMain extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public SqlMapMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel15 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                closeFrame();
            }
        }
    );
    setResizable(false);

    jTextArea1.setColumns(20);
    jTextArea1.setRows(5);
    jTextArea1.setText("Cookie:");
    jScrollPane1.setViewportView(jTextArea1);

    jButton2.setText("开始替换");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jLabel1.setText("选择请求目录：");

    jTextArea2.setColumns(20);
    jTextArea2.setRows(5);
    jTextArea2.setText("LoadBalanceID");
    jScrollPane2.setViewportView(jTextArea2);

    jLabel2.setText("结束特征字符串");

    jLabel3.setText("起始特征字符串");

    jTextArea3.setColumns(20);
    jTextArea3.setLineWrap(true);
    jTextArea3.setRows(5);
    jTextArea3.setText("包含起始和结束特征字符串");
    jScrollPane3.setViewportView(jTextArea3);

    jTextField1.setEditable(false);
    jTextField1.setToolTipText("");

    jLabel5.setText("替换内容");

    jButton1.setText("选择文件夹");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jTextArea4.setColumns(20);
    jTextArea4.setLineWrap(true);
    jTextArea4.setRows(5);
    jScrollPane4.setViewportView(jTextArea4);

    jLabel12.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
    jLabel12.setText("进度显示");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                .addComponent(jScrollPane2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(41, 41, 41)
                            .addComponent(jButton1)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(207, 207, 207)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(30, 30, 30))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(57, 57, 57)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1))
            .addGap(28, 28, 28)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel5))
            .addGap(6, 6, 6)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2))
                .addComponent(jScrollPane3))
            .addGap(31, 31, 31)
            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(51, 51, 51))
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(8, 8, 8)
            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(61, 61, 61))
    );

    jTabbedPane1.addTab("Cookie批量处理", jPanel1);

    jLabel4.setText("所选路径");

    jLabel8.setText("进程数：");

    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Oracle", "Microsoft SQL Server", "mysql", "PostgreSQL" }));
    jComboBox1.setRequestFocusEnabled(false);

    jLabel9.setText("后台数据库：");

    jButton3.setText("开始扫描");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    jLabel10.setText("SqlMap安装路径：");

    jTextField5.setText("jTextField5");
    jTextField5.setText("C:\\Python\\sqlmap");

    jLabel11.setText("参数设置");

    jTextArea5.setColumns(20);
    jTextArea5.setRows(5);
    jScrollPane6.setViewportView(jTextArea5);

    jLabel13.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
    jLabel13.setText("进度显示");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(438, 438, 438)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(382, 382, 382)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(71, 71, 71)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel10))
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(44, 44, 44)
                                            .addComponent(jTextField2)))))
                            .addGap(52, 52, 52))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(276, 276, 276)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(215, 215, 215)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(175, 175, 175)))
            .addGap(25, 25, 25))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGap(31, 31, 31)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(58, 58, 58)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addGap(65, 65, 65)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 130, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(141, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
    );

    jTabbedPane1.addTab("运行扫描", jPanel2);

    jLabel6.setText("扫描结果存放路径：");

    jLabel7.setText("搜索在文件中的关键字：");

    jTextField4.setText("ASP.NET");

    jButton4.setText("开始搜索");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });

    jList1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jList1MouseClicked(evt);
        }
    });
    jScrollPane7.setViewportView(jList1);

    jLabel15.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
    jLabel15.setText("进度显示");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(121, 121, 121)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(38, 38, 38)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(176, 176, 176)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(21, 21, 21))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(212, 212, 212))
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(183, 183, 183)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(116, 116, 116)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(104, 104, 104)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(59, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("结果分析", jPanel3);

    jMenu1.setText("菜单");

    jMenuItem1.setText("退出");
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem1ActionPerformed(evt);
        }
    });
    jMenu1.add(jMenuItem1);

    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
    }// </editor-fold>                        


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int value = jfc.showDialog(new JLabel(), "选择");

        if (value == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            if (file.isDirectory()) {
                System.out.println("文件夹:" + file.getAbsolutePath());
                jTextField1.setText(file.getAbsolutePath());
                jTextField2.setText(file.getAbsolutePath());
                resultSrcString = (file.getAbsolutePath() + "\\result\\");
                jTextField3.setText(resultSrcString);
                srcString = file.getAbsolutePath();
            } else {
                System.out.println("选择的不是正确目录，请检查。");
            }
            System.out.println(jfc.getSelectedFile().getName());
        } else {

        }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        if (jTextField1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "未选择路径，请检查", "警告", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        jTextArea4.setText("");
        int count = 0;
        String firstStr = jTextArea1.getText();
        String lastStr = jTextArea2.getText();
        String beReplacedStr = jTextArea3.getText();
        if ((firstStr.isEmpty()) || (lastStr.isEmpty()) || (beReplacedStr.isEmpty())) {
            JOptionPane.showMessageDialog(null, "参数不能为空，请检查！", "警告", JOptionPane.INFORMATION_MESSAGE);
        } else {
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//设置日期格式
            //初始化
            File srcFile = new File(srcString);

            File resultFile = new File(srcString+"\\result\\");
          if (resultFile.exists() && resultFile.isDirectory()) {
            Tools.deleteDir(resultFile);
        } 
            //定义正则规则表达式：
            String regx;
            
             regx = firstStr + "(.*?)" + lastStr;

            ArrayList<String> dirList = Tools.getFiles(srcFile, "txt");
            Iterator<String> dirit = dirList.iterator();
            int filecount = dirList.size();

            //开始遍历每个文件，读取每个文件每一行进行判断
            while (dirit.hasNext()) {
                BufferedReader bfread = null;
                try {
                    //获取每个文件绝对路径值
                    String txtsrc = dirit.next();
                    //设置标志记录是否存在可替换文件
                    Boolean tmp = false;
                    StringBuilder s = new StringBuilder();
                    File brfile = new File(txtsrc);
                    bfread = new BufferedReader(new FileReader(brfile));
                    String Line = null;
                    int i = 0;
                    while ((Line = bfread.readLine()) != null) {
                        if (Line.contains(firstStr) && Line.contains(lastStr) && Line.indexOf(firstStr) < Line.indexOf(lastStr)) {
                            if (i == 0) {
                                count++;
                            }
                            //Line = firstStr + beReplacedStr + lastStr;
                            //System.out.println("Line");
                            Line = Line.replaceAll(regx, beReplacedStr);
                            //Line = beReplacedStr;
                            i++;

                            tmp = true;

                        }
                        s.append(Line + "\r\n");
                    }
                    if (tmp) {
                        //System.out.println(df.format(new Date()) + "..." + txtsrc + "替换成功，替换了" + i + "处");
                        jTextArea4.append((df.format(new Date()) + "..." + txtsrc + "替换成功，替换了" + i + "处") + "\r\n");
                        jTextArea4.paintImmediately(jTextArea4.getBounds());

                        BufferedWriter bufwr = new BufferedWriter(new FileWriter(brfile, false));
                        bufwr.write(s.toString());

                        bufwr.close();
                    } else {
                        //System.out.println(txtsrc + "未找到特征字符串，请核对参数。");
                        jTextArea4.append(txtsrc + "未找到特征字符串，请核对参数。" + "\r\n");
                        jTextArea4.paintImmediately(jTextArea4.getBounds());
                    }
                    bfread.close();

                    //logwr.close();
                } catch (Exception ex) {
                    Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        bfread.close();

                    } catch (IOException ex) {
                        Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            System.out.println("一共" + filecount + "个文件，其中共替换了" + count + "个文件");
            jTextArea4.append(("一共" + filecount + "个文件，其中共替换了" + count + "个文件"));
            jTextArea4.paintImmediately(jTextArea4.getBounds());
            JOptionPane.showMessageDialog(null, ("结果：一共" + filecount + "个文件，其中共替换了" + count + "个文件"), "结果", JOptionPane.INFORMATION_MESSAGE);

        }
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        int processNum;
        try{   
        int x = Integer.parseInt(jSpinner1.getValue().toString());
         if(x==0){
             JOptionPane.showMessageDialog(null, ("进程数不能为0，请检查！"), "结果", JOptionPane.INFORMATION_MESSAGE);
             return;
        }else if(x<0){
             JOptionPane.showMessageDialog(null, ("进程数非法，请检查！"), "结果", JOptionPane.INFORMATION_MESSAGE);
              return;
        }else if(x>50){
             JOptionPane.showMessageDialog(null, ("进程数过大，不建议！"), "结果", JOptionPane.INFORMATION_MESSAGE);
              return;
        }
        processNum=x;
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, ("请输入有效进程数！"), "结果", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String DBMS = (String)jComboBox1.getSelectedItem();
        if(DBMS.equals("Microsoft SQL Server")){
            DBMS = "mssql";
        }
        String xdir = jTextField5.getText();
         if (!xdir.endsWith("\\")) {
            xdir = xdir + "\\";
        }
        String ydir = xdir + "sqlmap.py";
        String SqlmapDir;
        File sqlmapFile = new File(xdir);
        if((sqlmapFile.exists()) && (sqlmapFile.isDirectory()) && (new File(ydir).exists())){
            SqlmapDir = xdir;
        }else{
             JOptionPane.showMessageDialog(null, ("请输入有效sqlmap目录！"), "结果", JOptionPane.INFORMATION_MESSAGE);
             return;
        }
        srcString = jTextField2.getText();
        File srcFile = new File(srcString);
        System.out.println(srcString);
        //请求集对象
        ArrayList<String> dirList = Tools.getFiles(srcFile, "txt");
        //生成结果文件夹
          if (srcString.endsWith("\\")) {
            srcString = srcString.substring(0, srcString.length() - 1);
        };
        File resultFile = new File(srcString+"\\result\\");
          if (!resultFile.exists() && !resultFile.isDirectory()) {
            //System.out.println("正在创建结果文件夹。。。");
            jTextArea5.append("正在创建结果文件夹。。。" + "\r\n");
            jTextArea5.paintImmediately(jTextArea5.getBounds());
            resultFile.mkdir();
        } else {
            //System.out.println("正在删除结果文件夹目录。。。");
            jTextArea5.append("正在删除结果文件夹目录。。。" + "\r\n");
            jTextArea5.paintImmediately(jTextArea5.getBounds());
            Tools.deleteDir(resultFile);
            //System.out.println("正在创建结果文件夹。。。");
            jTextArea5.append("正在创建结果文件夹。。。" + "\r\n");
            jTextArea5.paintImmediately(jTextArea5.getBounds());
            resultFile.mkdir();
        }
         //删除已有批处理文件
          if (Tools.isExistBat(srcFile)) {
            //System.out.println("已经存在批处理文件，正在进行删除");
            jTextArea5.append("已经存在批处理文件，正在进行删除" + "\r\n");
            jTextArea5.paintImmediately(jTextArea5.getBounds());
                int count = Tools.delBat(srcFile);
                //System.out.println("共删除了" + count + "个bat文件");
                jTextArea5.append("共删除了" + count + "个bat文件" + "\r\n");
                jTextArea5.paintImmediately(jTextArea5.getBounds());
        }
        //遍历请求文件
        Iterator<String> it = dirList.iterator();
        //根据进程数分发
         Map<Integer, BufferedWriter> bfmap = new HashMap<Integer, BufferedWriter>();

        for (int i = 1; i <= processNum; i++) {
            try {
                bfmap.put(i, new BufferedWriter(new OutputStreamWriter(new FileOutputStream(srcString + "\\" + i + ".bat"),"GBK")));
            } catch (IOException ex) {
                Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        int tmp = processNum;
        while (it.hasNext()) {

            try {
                String s = it.next();
                //String fileName = s.substring(s.lastIndexOf("\\")+1,s.length()-4);
                String fileName = s.replace(srcString + "\\", "");
                //String x = s.substring(0,s.lastIndexOf("\\"));
                String y = srcString + "\\result\\" + fileName;
                String x = y.substring(0, y.lastIndexOf("\\"));
                //System.out.println("要创建的目录为："+x);
                if (!new File(x).isDirectory()) {
                    new File(x).mkdir();
                }
                bfmap.get(tmp).write("python " + SqlmapDir + "sqlmap.py -r " + s + " --flush-session --dbms " + DBMS + " --batch >" + srcString + "\\result\\" + fileName + "-------Result.txt");
                bfmap.get(tmp).newLine();
                bfmap.get(tmp).flush();
                 tmp--;
                if (tmp == 0) {
                tmp = processNum;
                }
            } catch (IOException ex) {
                Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
         for (int i = processNum; i > 0; i--) {
            try {
                bfmap.get(i).write("exit");
                //bfmap.get(tmp).write("dir "+dir+"\\result\\ >"+dir+"\\result\\"+fileName+"Result.txt");
                bfmap.get(i).newLine();
                bfmap.get(i).flush();
            } catch (IOException ex) {
                Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
          for (int i = 1; i <= processNum; i++) {
            try {
                bfmap.get(i).close();
            } catch (IOException ex) {
                Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
          if (Tools.isExistFile(srcString, processNum + ".bat")) {
            //System.out.println("文件生成成功");
            jTextArea5.append("文件生成成功" + "\r\n");
            jTextArea5.paintImmediately(jTextArea5.getBounds());
            int n = JOptionPane.showConfirmDialog(null, "批处理文件生成成功，直接运行吗？", "标题",JOptionPane.YES_NO_OPTION);//返回的是按钮的index  i=0或者1  
            if(n==0){
           
                //运行bat文件
                Map<Integer, String> cmdMap = new HashMap<Integer, String>();

                for (int i = 1; i <= processNum; i++) {
                    cmdMap.put(i, new String("cmd /c start  " + srcString + "\\" + i + ".bat"));//+"1.bat";
                     
                }

                Runtime rt = Runtime.getRuntime();
            
                try {
                    for (int j = 1; j <= processNum; j++) {
                        rt.exec(cmdMap.get(j));
                        //System.out.println("第"+j+"进程开始运行。。。");
                        jTextArea5.append("第"+j+"进程开始运行。。。" + "\r\n");
                        jTextArea5.paintImmediately(jTextArea5.getBounds());
                    }
                } catch (IOException e1) {
                    e1.printStackTrace();
                }

            } else {
                //System.out.println("请手动运行bat文件");
                jTextArea5.append("请手动运行bat文件" + "\r\n");
                jTextArea5.paintImmediately(jTextArea5.getBounds());
            }

        } else {
            //System.out.println("未正常生成批处理文件，请检查参数，重新运行");
            jTextArea5.append("未正常生成批处理文件，请检查参数，重新运行" + "\r\n");
            jTextArea5.paintImmediately(jTextArea5.getBounds());
        }
            
    }                                        


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //ListModel dtm=jList1.getModel();
        DefaultListModel dtm = new DefaultListModel();  
       jList1.setModel(dtm);
        int index = 1;
        int sqlzrcount = 0;
        
        File resultFile = new File(jTextField3.getText());
        System.out.println(jTextField3.getText());
        //记录问题结果集
        ArrayList<String> sqlZrTxtPath = new ArrayList<String>();
        if (resultFile.exists() || (resultFile.isDirectory())) {
            //获取全部结果txt文件
            ArrayList<String> dirList = Tools.getFiles(resultFile, "txt");
            //遍历结果
            Iterator<String> dirit = dirList.iterator();

            loap1:
            while (dirit.hasNext()) {
                //StringBuffer filepath = new StringBuffer(dirit.next());
                try {
                    //获取文件绝对路径
                    String filename = dirit.next();
                    File pointFile = new File(filename);
                    BufferedReader bufre = new BufferedReader(new FileReader(pointFile));
                    String Line = null;
                    //遍历结果是否存在关键字
                    loap2:
                    while ((Line = bufre.readLine()) != null) {
                        if (Line.contains("ASP.NET")) {
                            //如果存在，保存文件名
                            sqlzrcount++;
                            sqlZrTxtPath.add(filename);
                            //System.out.println(filename);
//                            Vector V_Add=new Vector();
//                            V_Add.add(index);
//                            V_Add.add(pointFile.getName());
//                            V_Add.add(pointFile.getAbsolutePath()); 
                            //V_Add.add(pointFile.getAbsolutePath().replace("result\\", ""));
                            dtm.addElement(pointFile.getAbsolutePath());
                            jList1.updateUI();
                            break loap2;
                        }

                    }

                } catch (IOException e) {
                    // TODO 自动生成的 catch 块
                    e.printStackTrace();
                }

            }
            System.out.println("共发现sql注入问题：" + sqlzrcount + "个");
            if(sqlzrcount==0){
                JOptionPane.showMessageDialog(null, ("未发现存在SQL注入漏洞的结果"), "警告", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, ("共发现sql注入问题：" + sqlzrcount + "个"), "警告", JOptionPane.INFORMATION_MESSAGE);}
        } else {
            JOptionPane.showMessageDialog(null, "结果文件夹生成失败，请检查", "警告", JOptionPane.INFORMATION_MESSAGE);
        }


    }                                        

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:]
        
                closeFrame();  
           
  
    }                                          

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        if(evt.getClickCount()==2){   //When double click JList  
             String dir = (String)jList1.getSelectedValue();//Event  
             System.out.println("点击的项为："+dir);
             File resultFile = new File(dir);
             String command = "C:\\WINDOWS\\system32\\notepad.exe "+dir;
            try {
                Runtime.getRuntime().exec(command);
            } catch (IOException ex) {
                Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }  
    }                                   
    
    private void closeFrame()  
    {  
        System.out.println("退出");  
        int result = JOptionPane.showConfirmDialog(null, "是否要退出？", "退出确认", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);  
        if (result == JOptionPane.YES_OPTION)  
            this.dispose();  
    }  


 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SqlMapMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SqlMapMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SqlMapMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SqlMapMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    //UIManager.setLookAndFeel("com.jtattoo.plaf.mint.MintLookAndFeel");
                    UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
                    
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(SqlMapMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            int result = JOptionPane.showConfirmDialog(null, "注意：使用本软件需要首先配置好python环境变量，是否配置好？(Path添加python路径)", "环境变量配置确认", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);  
            if (result == JOptionPane.YES_OPTION)  
            {    
                 new SqlMapMain().setVisible(true);
            }else{
                return;
                }  
               
            }
        });
    }
    //声明全局变量扫描路径
    private String srcString = "";
    //声明全局变量结果路径
    private String resultSrcString = "";
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration                   
}

